#pragma checksum "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "af46f6dffbb0d3b87c4a12c54706517af069e7de"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace OrganizedCrimeApp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using OrganizedCrimeApp.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/carebear/Projects/OrganizedCrimeApp/Client/_Imports.razor"
using OrganizedCrimeApp.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
using OrganizedCrimeApp.Shared.Library;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
using System.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 127 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
       
  private HubConnection hubConnection;
  private List<string> messages = new List<string>();
  private string userInput;
  private string messageInput;
  private string inputTargetedPerson = string.Empty;
  private string labelTargetAction = "StartFirstNight";
  private string labelAdvanceButton = "Go To Sleep";
  private List<string> possibleTargets = new List<string>();
  private string gameState = GameState.Lobby.ToString();
  private string labelGameState = string.Empty;
  private List<string> activePlayers = new List<string>();
  private bool isActivePlayer = false;
  private string labelCountdown = string.Empty;
  private string srcSoundMafia = "/sounds/MafiaWakeUp.wav";
  private string srcSoundDoctor = "/sounds/DoctorWakeUp.wav";
  private string srcSoundSherrif = "/sounds/SherrifWakeUp.wav";
  private string srcSoundEverybody = "/sounds/EverybodyWakeUp.wav";
  private bool isNightMafiaTime => gameState == GameState.NightMafia.ToString();
  private bool isDayTime => gameState == GameState.Day.ToString();
  private bool isNightDoctorTime => gameState == GameState.NightDoctor.ToString();
  private bool isNightSherrifTime => gameState == GameState.NightSherrif.ToString();
  private bool isLobbyTime => gameState == GameState.Lobby.ToString();
  private bool isGameOverCiviliansWin => gameState == GameState.GameOverCiviliansWin.ToString();
  private bool isGameOverMafiaWins => gameState == GameState.GameOverMafiaWins.ToString();
  private bool isIntroductionRound => gameState == GameState.IntroductionRound.ToString();

  protected override async Task OnInitializedAsync()
  {
    hubConnection = new HubConnectionBuilder()
      .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
    .Build();

    UpdateLabelGameState();

    hubConnection.On<string>(AsyncMethod.Msg_RECEIVE, (message) =>
    {
      messages.Insert(0, message);
      StateHasChanged();
    });

    

#line default
#line hidden
#nullable disable
#nullable restore
#line 171 "/home/carebear/Projects/OrganizedCrimeApp/Client/Pages/Index.razor"
            


    hubConnection.On<string>(AsyncMethod.Log_CONSOLE, (message) =>
      {
      Log(message);
      // StateHasChanged();
    });

    hubConnection.On<string, List<string>, List<string>>(AsyncMethod.Game_LOAD, (newGameState,
      targetList, activePlayerList) =>
    {
      activePlayers = activePlayerList;
      var thisPlayerId = hubConnection.ConnectionId;

      isActivePlayer = activePlayers.Contains(thisPlayerId); // refactor?

      gameState = newGameState;

      UpdateLabelGameState();
      possibleTargets = targetList;

      if (isDayTime)
      {
        labelTargetAction = "kick out of town";
      }
      else
      if (isNightMafiaTime)
      {
        labelTargetAction = "kill: ";
      }
      else
      if (isNightDoctorTime)
      {
        labelTargetAction = "save: ";

      }
      else
      if (isNightSherrifTime)
      {
        labelTargetAction = "spy on: ";
      }
      else
      if (isIntroductionRound)
      {
        labelAdvanceButton = "The First Night...";
      }
      else
      {
        labelTargetAction = "No action available";
      }

      StateHasChanged();
    });

    await hubConnection.StartAsync();
  }

  Task Send() =>
    hubConnection.SendAsync(AsyncMethod.Msg_SEND, userInput, messageInput);

  Task Start() => hubConnection.InvokeAsync(AsyncMethod.Game_START);

  Task Advance() => hubConnection.InvokeAsync(AsyncMethod.Game_ADVANCE, inputTargetedPerson, labelTargetAction);

  public bool IsConnected =>
    hubConnection.State == HubConnectionState.Connected;

  public void Dispose()
  {
    _ = hubConnection.DisposeAsync();
  }

  public void UpdateLabelGameState()
  {
    if (isDayTime)
    {
      labelGameState = "Day Time - City Hall Meeting";
      labelAdvanceButton = "Confirm Vote & Close Eyes";
    }
    else if (isNightDoctorTime)
    {
      labelGameState = "Night Time - The Doctor is on call";
      labelAdvanceButton = "Rescue";
    }
    else if (isNightMafiaTime)
    {
      labelGameState = "Night Time - Crime Time";
      labelAdvanceButton = "Attack";
    }
    else if (isNightSherrifTime)
    {
      labelGameState = "Night Time - Sherrif is on duty";

      labelAdvanceButton = "Spy";

    }
    else if (isLobbyTime)
    {
      messages.Clear();
      labelGameState = "Click Start once everyone has joined";
    }
    else if (isIntroductionRound)
    {
      labelGameState = "Day Time - First City Hall Meeting";
    }
    else if (isGameOverCiviliansWin)
    {
      labelGameState = "Game OVER - The Civilians Win";


    }
    else if (isGameOverMafiaWins)
    {
      labelGameState = "GAME OVER - The Mafia Wins";

    }
    else
    {
      labelGameState = "unexpected GameState";
    }
  }

  public void Log(string message)
  {
    Console.WriteLine(message);
  }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
